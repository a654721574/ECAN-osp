{"name": "test_new_success[test_info0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '' == '新增机构成功'\n  - 新增机构成功", "trace": "self = <test_cases.test_002_office.TestOffice object at 0x000001A12DE89748>\ntest_info = {'expected': '新增机构成功', 'name': '测试5527', 'officecode': '9085496', 'officename': '测试5527'}\nget_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cdd9106f181393d86f2ffe8a01eeec0a\")>\n\n    @pytest.mark.parametrize('test_info',new_office_data_success)\n    @pytest.mark.flaky(reruns=1)\n    @allure.story(\"新增机构成功\")\n    def test_new_success(self,test_info,get_browser):\n        \"\"\"\n        新增机构成功\n        :param test_info:\n        :param get_browser:\n        :return:\n        \"\"\"\n        driver=get_browser\n        LoginPage(driver).login(User.username, User.pwd)\n    \n        expected = test_info['expected']\n        OfficePage(driver).newOffice(test_info[\"name\"],test_info[\"officename\"], test_info[\"officecode\"])\n        success_msg = OfficePage(driver).get_new_success_msg()\n        print(success_msg)\n        try:\n            assert success_msg == expected\n        except AssertionError as e:\n>           raise e\n\ntest_002_office.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_cases.test_002_office.TestOffice object at 0x000001A12DE89748>\ntest_info = {'expected': '新增机构成功', 'name': '测试5527', 'officecode': '9085496', 'officename': '测试5527'}\nget_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cdd9106f181393d86f2ffe8a01eeec0a\")>\n\n    @pytest.mark.parametrize('test_info',new_office_data_success)\n    @pytest.mark.flaky(reruns=1)\n    @allure.story(\"新增机构成功\")\n    def test_new_success(self,test_info,get_browser):\n        \"\"\"\n        新增机构成功\n        :param test_info:\n        :param get_browser:\n        :return:\n        \"\"\"\n        driver=get_browser\n        LoginPage(driver).login(User.username, User.pwd)\n    \n        expected = test_info['expected']\n        OfficePage(driver).newOffice(test_info[\"name\"],test_info[\"officename\"], test_info[\"officecode\"])\n        success_msg = OfficePage(driver).get_new_success_msg()\n        print(success_msg)\n        try:\n>           assert success_msg == expected\nE           AssertionError: assert '' == '新增机构成功'\nE             - 新增机构成功\n\ntest_002_office.py:34: AssertionError"}, "description": "\n        新增机构成功\n        :param test_info:\n        :param get_browser:\n        :return:\n        ", "parameters": [{"name": "test_info", "value": "{'name': '测试5527', 'officename': '测试5527', 'officecode': '9085496', 'expected': '新增机构成功'}"}], "start": 1597280666314, "stop": 1597280706679, "uuid": "a0e5835f-8de1-4b4d-b599-0229c4b04956", "historyId": "80dadfe3e0b033006fd163a244e56761", "testCaseId": "96617d97cc50050747c41ecbb0d248e0", "fullName": "test_cases.test_002_office.TestOffice#test_new_success", "labels": [{"name": "story", "value": "新增机构成功"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_002_office"}, {"name": "subSuite", "value": "TestOffice"}, {"name": "host", "value": "LAPTOP-G986QGRS"}, {"name": "thread", "value": "8208-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_002_office"}]}